"use client";

import { useCallback } from "react";
import { useQueryClient } from "@tanstack/react-query";

interface UseTitleSyncOptions {
  sessionId?: string;
  enabled?: boolean;
}

/**
 * ‚úÖ THREAD-FIRST: Hook simplificado para sincroniza√ß√£o de t√≠tulo
 *
 * Remove toda a l√≥gica complexa de polling e retry.
 * Foca apenas em invalidar queries para refetch.
 */
export function useTitleSync({
  sessionId,
  enabled = true,
}: UseTitleSyncOptions) {
  const queryClient = useQueryClient();

  // ‚úÖ THREAD-FIRST: Fun√ß√£o simples para invalidar queries
  const syncNow = useCallback(async () => {
    if (!sessionId || !enabled) {
      console.log("‚ö†Ô∏è [TITLE_SYNC] Sync ignorado - sessionId ou enabled falso");
      return;
    }

    console.log("üîÑ [TITLE_SYNC] Invalidando queries para sess√£o:", sessionId);

    try {
      // Invalidar query da sess√£o espec√≠fica
      await queryClient.invalidateQueries({
        queryKey: ["app", "chat", "buscarSession", { sessionId }],
      });

      // Invalidar lista de sess√µes
      await queryClient.invalidateQueries({
        queryKey: ["app", "chat", "listarSessions"],
      });

      console.log("‚úÖ [TITLE_SYNC] Queries invalidadas com sucesso");
    } catch (error) {
      console.error("‚ùå [TITLE_SYNC] Erro na sincroniza√ß√£o:", error);
    }
  }, [sessionId, enabled, queryClient]);

  return {
    syncNow,
    isGenerating: false, // Sempre false j√° que n√£o temos mutation
    error: null,
  };
}
