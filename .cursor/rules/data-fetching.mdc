---
description: How to implement data fetching with tRPC in the application
globs: apps/kdx/src/**/* packages/api/src/**/* 
alwaysApply: false
---
# Data Fetching with tRPC

This project uses tRPC for type-safe data fetching between the frontend and backend.

## Client-Side Data Fetching

1. Import the API hooks from the trpc client:
```tsx
import { api } from "~/trpc/react";
```

2. Use the hooks in your components:
```tsx
// Query example (for fetching data)
const userQuery = api.user.getNotifications.useQuery({ teamId: "your-team-id" });

// Access data, loading and error states
const { data, isLoading, error } = userQuery;

// Mutation example (for creating, updating, deleting data)
const mutation = api.user.changeName.useMutation({
  onSuccess: () => {
    // Handle success - e.g., show toast notification
  },
});

// Call the mutation
mutation.mutate({ firstName: "New", lastName: "Name" });
```

3. For optimistic updates, use the context and invalidation:
```tsx
const utils = api.useUtils();

const mutation = api.user.changeName.useMutation({
  onSuccess: () => {
    // Invalidate queries that need to be refreshed
    utils.user.getNotifications.invalidate();
  },
});
```

## Adding New API Endpoints

1. Create a new handler file in the appropriate router directory:
```ts
// packages/api/src/trpc/routers/user/myNewEndpoint.handler.ts
import type { MyProcedureContext } from "../../trpc";

export const myNewEndpointHandler = async ({
  input,
  ctx,
}: {
  input: /* Input type */;
  ctx: MyProcedureContext;
}) => {
  // Implementation
  return /* result */;
};
```

2. Add the endpoint to the router:
```ts
// packages/api/src/trpc/routers/user/_router.ts
import { ZMyNewEndpointSchema } from "@kdx/validators/trpc/user";
import { myNewEndpointHandler } from "./myNewEndpoint.handler";

export const userRouter = {
  // ... existing endpoints
  
  myNewEndpoint: protectedProcedure
    .input(ZMyNewEndpointSchema)
    .query(myNewEndpointHandler), // or .mutation() for write operations
} satisfies TRPCRouterRecord;
```

3. Define input validation schema:
```ts
// packages/validators/src/trpc/user.ts
export const ZMyNewEndpointSchema = z.object({
  // Define input fields
});

export type TMyNewEndpointInput = z.infer<typeof ZMyNewEndpointSchema>;
```